<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>‰ΩèÊ∞ëÁ®é„ÇØ„Ç®„Çπ„Éà - Á®éÈáëÂÜíÈô∫RPG</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Courier New', monospace;
            background: linear-gradient(45deg, #1a1a2e, #16213e);
            color: #fff;
            min-height: 100vh;
            overflow-x: hidden;
        }

        .game-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        .game-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-radius: 15px;
            padding: 20px;
            margin-bottom: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(102, 126, 234, 0.5);
            border: 2px solid #ffd700;
        }

        .game-title {
            font-size: 2.5rem;
            color: #ffd700;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.5);
            margin-bottom: 10px;
            animation: glow 2s ease-in-out infinite alternate;
        }

        @keyframes glow {
            from { text-shadow: 2px 2px 4px rgba(0,0,0,0.5), 0 0 10px #ffd700; }
            to { text-shadow: 2px 2px 4px rgba(0,0,0,0.5), 0 0 20px #ffd700, 0 0 30px #ffd700; }
        }

        .subtitle {
            color: #e0e0e0;
            font-size: 1.2rem;
        }

        .status-bar {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            margin-bottom: 20px;
        }

        .status-item {
            background: rgba(0, 0, 0, 0.7);
            border: 2px solid #00ff00;
            border-radius: 10px;
            padding: 15px;
            text-align: center;
            box-shadow: 0 0 15px rgba(0, 255, 0, 0.3);
        }

        .status-label {
            color: #00ff00;
            font-size: 0.9rem;
            margin-bottom: 5px;
        }

        .status-value {
            font-size: 1.5rem;
            font-weight: bold;
            color: #ffd700;
        }

        .game-area {
            display: grid;
            grid-template-columns: 2fr 1fr;
            gap: 20px;
        }

        .main-quest {
            background: rgba(0, 0, 0, 0.8);
            border: 2px solid #ff6b35;
            border-radius: 15px;
            padding: 20px;
            box-shadow: 0 0 20px rgba(255, 107, 53, 0.3);
        }

        .quest-title {
            color: #ff6b35;
            font-size: 1.5rem;
            margin-bottom: 15px;
            text-align: center;
        }

        .quest-item {
            background: rgba(255, 255, 255, 0.1);
            border: 1px solid #666;
            border-radius: 10px;
            padding: 15px;
            margin-bottom: 15px;
            cursor: pointer;
            transition: all 0.3s;
        }

        .quest-item:hover {
            background: rgba(255, 255, 255, 0.2);
            border-color: #ffd700;
            transform: translateX(5px);
        }

        .quest-difficulty {
            display: inline-block;
            padding: 3px 8px;
            border-radius: 12px;
            font-size: 0.8rem;
            margin-bottom: 8px;
        }

        .difficulty-easy { background: #00ff00; color: #000; }
        .difficulty-normal { background: #ffd700; color: #000; }
        .difficulty-hard { background: #ff4444; color: #fff; }
        .difficulty-legend { background: #9d4edd; color: #fff; }

        .quest-name {
            font-size: 1.2rem;
            color: #ffd700;
            margin-bottom: 8px;
        }

        .quest-reward {
            color: #00ff00;
            font-size: 0.9rem;
            margin-bottom: 5px;
        }

        .quest-desc {
            color: #ccc;
            font-size: 0.9rem;
            line-height: 1.4;
        }

        .side-panel {
            display: flex;
            flex-direction: column;
            gap: 20px;
        }

        .panel {
            background: rgba(0, 0, 0, 0.8);
            border: 2px solid #00bfff;
            border-radius: 15px;
            padding: 15px;
            box-shadow: 0 0 15px rgba(0, 191, 255, 0.3);
        }

        .panel-title {
            color: #00bfff;
            font-size: 1.2rem;
            margin-bottom: 10px;
            text-align: center;
        }

        .inventory-item {
            background: rgba(255, 255, 255, 0.1);
            border: 1px solid #666;
            border-radius: 8px;
            padding: 10px;
            margin-bottom: 8px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .item-name {
            color: #ffd700;
            font-weight: bold;
        }

        .item-count {
            color: #00ff00;
            background: rgba(0, 0, 0, 0.5);
            padding: 2px 6px;
            border-radius: 10px;
            font-size: 0.8rem;
        }

        .action-buttons {
            display: flex;
            gap: 10px;
            margin-top: 15px;
        }

        .btn {
            padding: 12px 20px;
            border: none;
            border-radius: 8px;
            font-size: 1rem;
            cursor: pointer;
            transition: all 0.3s;
            font-family: 'Courier New', monospace;
            flex: 1;
        }

        .btn-primary {
            background: linear-gradient(45deg, #667eea, #764ba2);
            color: white;
            border: 2px solid #ffd700;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
        }

        .btn-secondary {
            background: linear-gradient(45deg, #ff6b35, #f7931e);
            color: white;
            border: 2px solid #ffd700;
        }

        .btn-secondary:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(255, 107, 53, 0.4);
        }

        .message-log {
            background: rgba(0, 0, 0, 0.9);
            border: 2px solid #ffd700;
            border-radius: 10px;
            padding: 15px;
            height: 200px;
            overflow-y: auto;
            font-family: 'Courier New', monospace;
            font-size: 0.9rem;
            line-height: 1.4;
        }

        .message {
            margin-bottom: 8px;
            padding: 5px;
            border-radius: 5px;
        }

        .message-system {
            color: #00ff00;
            background: rgba(0, 255, 0, 0.1);
        }

        .message-info {
            color: #00bfff;
            background: rgba(0, 191, 255, 0.1);
        }

        .message-success {
            color: #ffd700;
            background: rgba(255, 215, 0, 0.1);
        }

        .message-error {
            color: #ff4444;
            background: rgba(255, 68, 68, 0.1);
        }

        .battle-scene {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.95);
            z-index: 1000;
            align-items: center;
            justify-content: center;
        }

        .battle-content {
            background: linear-gradient(135deg, #1a1a2e, #16213e);
            border: 3px solid #ffd700;
            border-radius: 20px;
            padding: 30px;
            max-width: 600px;
            width: 90%;
            text-align: center;
        }

        .enemy-sprite {
            font-size: 4rem;
            margin: 20px 0;
            animation: bounce 1s ease-in-out infinite;
        }

        @keyframes bounce {
            0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
            40% { transform: translateY(-10px); }
            60% { transform: translateY(-5px); }
        }

        .progress-bar {
            width: 100%;
            height: 20px;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 10px;
            overflow: hidden;
            margin: 10px 0;
        }

        .progress-fill {
            height: 100%;
            background: linear-gradient(90deg, #00ff00, #ffd700);
            transition: width 0.3s ease;
        }

        @media (max-width: 768px) {
            .game-area {
                grid-template-columns: 1fr;
            }
            
            .game-title {
                font-size: 2rem;
            }
            
            .action-buttons {
                flex-direction: column;
            }
        }
    </style>
</head>
<body>
    <div class="game-container">
        <header class="game-header">
            <h1 class="game-title">‚öîÔ∏è ‰ΩèÊ∞ëÁ®é„ÇØ„Ç®„Çπ„Éà ‚öîÔ∏è</h1>
            <p class="subtitle">Á®éÈáë„ÅÆÁü•Ë≠ò„ÅßÁéãÂõΩ„ÇíÊïë„ÅàÔºÅ2025Âπ¥Â∫¶Á®éÂà∂ÊîπÊ≠£„ÅÆÂÜíÈô∫</p>
        </header>

        <div class="status-bar">
            <div class="status-item">
                <div class="status-label">üë§ ÂãáËÄÖ„É¨„Éô„É´</div>
                <div class="status-value" id="playerLevel">1</div>
            </div>
            <div class="status-item">
                <div class="status-label">üí∞ „Ç¥„Éº„É´„Éâ</div>
                <div class="status-value" id="playerGold">500</div>
            </div>
            <div class="status-item">
                <div class="status-label">‚≠ê ÁµåÈ®ìÂÄ§</div>
                <div class="status-value" id="playerExp">0</div>
            </div>
            <div class="status-item">
                <div class="status-label">üèÜ „ÇØ„É™„Ç¢Êï∞</div>
                <div class="status-value" id="clearedQuests">0</div>
            </div>
        </div>

        <div class="game-area">
            <main class="main-quest">
                <h2 class="quest-title">üó°Ô∏è „É°„Ç§„É≥„ÇØ„Ç®„Çπ„Éà</h2>
                <div id="questList">
                    <!-- „ÇØ„Ç®„Çπ„Éà„ÅØJavaScript„ÅßÂãïÁöÑÁîüÊàê -->
                </div>
                <div class="action-buttons">
                    <button class="btn btn-primary" onclick="refreshQuests()">üîÑ „ÇØ„Ç®„Çπ„ÉàÊõ¥Êñ∞</button>
                    <button class="btn btn-secondary" onclick="showShop()">üè™ „Ç¢„Ç§„ÉÜ„É†„Ç∑„Éß„ÉÉ„Éó</button>
                </div>
            </main>

            <aside class="side-panel">
                <div class="panel">
                    <h3 class="panel-title">üéí ÊâÄÊåÅ„Ç¢„Ç§„ÉÜ„É†</h3>
                    <div id="inventory">
                        <div class="inventory-item">
                            <span class="item-name">üìö Á®éÊ≥ï„ÅÆÊõ∏</span>
                            <span class="item-count">x1</span>
                        </div>
                        <div class="inventory-item">
                            <span class="item-name">üß™ Áü•Ë≠ò„Éù„Éº„Ç∑„Éß„É≥</span>
                            <span class="item-count">x3</span>
                        </div>
                        <div class="inventory-item">
                            <span class="item-name">üõ°Ô∏è ÁØÄÁ®é„ÅÆÁõæ</span>
                            <span class="item-count">x1</span>
                        </div>
                    </div>
                </div>

                <div class="panel">
                    <h3 class="panel-title">üìú ÂÜíÈô∫„É≠„Ç∞</h3>
                    <div class="message-log" id="messageLog">
                        <div class="message message-system">üéÆ ‰ΩèÊ∞ëÁ®é„ÇØ„Ç®„Çπ„Éà„Å∏„Çà„ÅÜ„Åì„ÅùÔºÅ</div>
                        <div class="message message-info">üìñ Á®éÂà∂ÊîπÊ≠£„ÅÆÁü•Ë≠ò„ÇíÈõÜ„ÇÅ„Å¶ÁéãÂõΩ„ÇíÊïë„ÅÑ„Åæ„Åó„Çá„ÅÜ</div>
                        <div class="message message-success">‚ú® ÂàùÂõû„É≠„Ç∞„Ç§„É≥„Éú„Éº„Éä„Çπ„Åß500„Ç¥„Éº„É´„Éâ„ÇíÁç≤ÂæóÔºÅ</div>
                    </div>
                </div>
            </aside>
        </div>
    </div>

    <!-- „Éê„Éà„É´ÁîªÈù¢ -->
    <div class="battle-scene" id="battleScene">
        <div class="battle-content">
            <h2 style="color: #ff6b35; margin-bottom: 20px;">‚öîÔ∏è Á®éÂãô„Éê„Éà„É´ ‚öîÔ∏è</h2>
            <div class="enemy-sprite" id="enemySprite">üëπ</div>
            <div id="enemyName" style="color: #ffd700; font-size: 1.5rem; margin-bottom: 15px;"></div>
            <div class="progress-bar">
                <div class="progress-fill" id="enemyHp" style="width: 100%;"></div>
            </div>
            <div id="battleQuestion" style="color: #fff; font-size: 1.2rem; margin: 20px 0; line-height: 1.6;"></div>
            <div id="battleOptions" style="display: flex; flex-direction: column; gap: 10px;"></div>
        </div>
    </div>

    <script>
        // „Ç≤„Éº„É†Áä∂ÊÖã
        let gameState = {
            playerLevel: 1,
            playerGold: 500,
            playerExp: 0,
            clearedQuests: 0,
            currentBattle: null,
            inventory: {
                'üìö Á®éÊ≥ï„ÅÆÊõ∏': 1,
                'üß™ Áü•Ë≠ò„Éù„Éº„Ç∑„Éß„É≥': 3,
                'üõ°Ô∏è ÁØÄÁ®é„ÅÆÁõæ': 1
            }
        };

        // „ÇØ„Ç®„Çπ„Éà„Éá„Éº„ÇøÔºà2025Âπ¥Â∫¶‰ΩèÊ∞ëÁ®éÊÉÖÂ†±„Éô„Éº„ÇπÔºâ
        const quests = [
            {
                id: 1,
                name: "103‰∏áÂÜÜ„ÅÆÂ£Å„ÅÆË¨é",
                difficulty: "easy",
                reward: "100„Ç¥„Éº„É´„Éâ + 50ÁµåÈ®ìÂÄ§",
                description: "2025Âπ¥Â∫¶„Åã„Çâ103‰∏áÂÜÜ„ÅÆÂ£Å„Åå123‰∏áÂÜÜ„Å´Â§âÊõ¥„Åï„Çå„ÅüÁêÜÁî±„ÇíËß£Êòé„Åõ„ÇàÔºÅ",
                enemy: "üë∫ Á®éÂà∂ÊîπÊ≠£„ÅÆÈ¨º",
                question: "2025Âπ¥Â∫¶Á®éÂà∂ÊîπÊ≠£„Å´„Çà„Çä„ÄÅ„Éë„Éº„Éà„Éª„Ç¢„É´„Éê„Ç§„Éà„ÅÆÊâÄÂæóÁ®éË™≤Á®éÊúÄ‰ΩéÈôê„ÅØ„ÅÑ„Åè„Çâ„Å´„Å™„Å£„ÅüÔºü",
                options: ["103‰∏áÂÜÜ„ÅÆ„Åæ„Åæ", "123‰∏áÂÜÜ„Å´Â§âÊõ¥", "150‰∏áÂÜÜ„Å´Â§âÊõ¥", "100‰∏áÂÜÜ„Å´Â§âÊõ¥"],
                correct: 1,
                explanation: "Âü∫Á§éÊéßÈô§È°ç„Åå48‰∏áÂÜÜ‚Üí63‰∏áÂÜÜ„ÄÅÁµ¶‰∏éÊâÄÂæóÊéßÈô§ÊúÄ‰Ωé‰øùÈöúÈ°ç„Åå55‰∏áÂÜÜ‚Üí65‰∏áÂÜÜ„Å´Âºï„Åç‰∏ä„Åí„Çâ„Çå„Åü„Åü„ÇÅ„ÄÅ103‰∏áÂÜÜ„ÅÆÂ£Å„Åå123‰∏áÂÜÜ„Å´Â§âÊõ¥„Åï„Çå„Åæ„Åó„Åü„ÄÇ"
            },
            {
                id: 2,
                name: "ÂÆöÈ°çÊ∏õÁ®éÊ∂àÂ§±‰∫ã‰ª∂",
                difficulty: "normal",
                reward: "200„Ç¥„Éº„É´„Éâ + 100ÁµåÈ®ìÂÄ§",
                description: "2025Âπ¥6Êúà„Åã„Çâ‰ΩèÊ∞ëÁ®é„ÅåÈ´ò„Åè„Å™„Å£„ÅüÂéüÂõ†„ÇíÁ©∂Êòé„Åõ„ÇàÔºÅ",
                enemy: "üßô‚Äç‚ôÇÔ∏è Ê∏õÁ®éÁµÇ‰∫Ü„ÅÆÈ≠îÊ≥ï‰Ωø„ÅÑ",
                question: "2024Âπ¥Â∫¶„ÅÆÂÆöÈ°çÊ∏õÁ®é„Åß„ÄÅ‰ΩèÊ∞ëÁ®é„ÅØ„ÅÑ„Åè„ÇâÊ∏õÈ°ç„Åï„Çå„Å¶„ÅÑ„ÅüÔºü",
                options: ["5,000ÂÜÜ", "10,000ÂÜÜ", "15,000ÂÜÜ", "20,000ÂÜÜ"],
                correct: 1,
                explanation: "2024Âπ¥Â∫¶„ÅÆÂÆöÈ°çÊ∏õÁ®é„Åß„ÅØ„ÄÅ‰ΩèÊ∞ëÁ®é„Åå1‰∫∫ÂΩì„Åü„Çä1‰∏áÂÜÜÊ∏õÈ°ç„Åï„Çå„Å¶„ÅÑ„Åæ„Åó„Åü„ÄÇ„Åì„ÅÆÊ∏õÁ®éÁµÇ‰∫Ü„Å´„Çà„Çä„ÄÅ2025Âπ¥6Êúà„Åã„Çâ‰ΩèÊ∞ëÁ®é„ÅåÈ´ò„ÅèÊÑü„Åò„Çâ„Çå„Åæ„Åô„ÄÇ"
            },
            {
                id: 3,
                name: "ÁâπÂÆöË¶™ÊóèÁâπÂà•ÊéßÈô§„ÅÆÁßòÂØÜ",
                difficulty: "hard",
                reward: "300„Ç¥„Éº„É´„Éâ + 200ÁµåÈ®ìÂÄ§",
                description: "Êñ∞Ë®≠„Åï„Çå„ÅüÁâπÂÆöË¶™ÊóèÁâπÂà•ÊéßÈô§„ÅÆË©≥Á¥∞„ÇíËß£Êòé„Åõ„ÇàÔºÅ",
                enemy: "üêâ ÊéßÈô§Âà∂Â∫¶„ÅÆÁ´ú",
                question: "ÁâπÂÆöË¶™ÊóèÁâπÂà•ÊéßÈô§„Åß„ÄÅÊâÄÂæóÁ®é„ÅÆÊéßÈô§È°ç„ÅØÊúÄÂ§ß„ÅÑ„Åè„ÇâÔºü",
                options: ["38‰∏áÂÜÜ", "58‰∏áÂÜÜ", "63‰∏áÂÜÜ", "85‰∏áÂÜÜ"],
                correct: 2,
                explanation: "ÁâπÂÆöË¶™ÊóèÁâπÂà•ÊéßÈô§„Åß„ÅØ„ÄÅ19„Äú22Ê≠≥„ÅÆÂ≠ê„Å©„ÇÇ„Åå„ÅÑ„ÇãÂ†¥Âêà„ÄÅÊâÄÂæóÁ®é„ÅßÊúÄÂ§ß63‰∏áÂÜÜ„ÅÆÊéßÈô§„ÇíÂèó„Åë„Çã„Åì„Å®„Åå„Åß„Åç„Åæ„Åô„ÄÇ"
            },
            {
                id: 4,
                name: "‰ΩèÊ∞ëÁ®éÈùûË™≤Á®éÈôêÂ∫¶È°ç„ÅÆÂ§âÊõ¥",
                difficulty: "normal",
                reward: "150„Ç¥„Éº„É´„Éâ + 80ÁµåÈ®ìÂÄ§",
                description: "‰ΩèÊ∞ëÁ®éÈùûË™≤Á®é„ÅÆÂπ¥Âèé‰∏äÈôêÂ§âÊõ¥„Å´„Å§„ÅÑ„Å¶Ë™øÊüª„Åõ„ÇàÔºÅ",
                enemy: "üëª ÈùûË™≤Á®éÈôêÂ∫¶È°ç„ÅÆ‰∫°Èúä",
                question: "2025Âπ¥Â∫¶„Åã„Çâ‰ΩèÊ∞ëÁ®éÈùûË™≤Á®é„ÅÆÂπ¥Âèé‰∏äÈôê„ÅØ„ÅÑ„Åè„Çâ„Å´„Å™„Å£„ÅüÔºü",
                options: ["100‰∏áÂÜÜ„ÅÆ„Åæ„Åæ", "105‰∏áÂÜÜ", "110‰∏áÂÜÜ", "115‰∏áÂÜÜ"],
                correct: 2,
                explanation: "Áµ¶‰∏éÊâÄÂæóÊéßÈô§„ÅÆÊîπÊ≠£„Å´‰º¥„ÅÑ„ÄÅ‰ΩèÊ∞ëÁ®éÈùûË™≤Á®é„ÅÆÂπ¥Âèé‰∏äÈôê„Åå100‰∏áÂÜÜ„Åã„Çâ110‰∏áÂÜÜ„Å´Âºï„Åç‰∏ä„Åí„Çâ„Çå„Åæ„Åó„Åü„ÄÇ"
            },
            {
                id: 5,
                name: "‰ºùË™¨„ÅÆÁ®éÂà∂ÊîπÊ≠£„Éû„Çπ„Çø„Éº",
                difficulty: "legend",
                reward: "500„Ç¥„Éº„É´„Éâ + 300ÁµåÈ®ìÂÄ§ + üèÜÁâπÂà•Áß∞Âè∑",
                description: "„Åô„Åπ„Å¶„ÅÆÁ®éÂà∂ÊîπÊ≠£Áü•Ë≠ò„ÇíÈßÜ‰Ωø„Åó„Å¶ÊúÄÂº∑„ÅÆÊïµ„ÇíÂÄí„ÅõÔºÅ",
                enemy: "ü¶π‚Äç‚ôÇÔ∏è Á®éÂà∂ÊîπÊ≠£„ÅÆÈ≠îÁéã",
                question: "2025Âπ¥Â∫¶Á®éÂà∂ÊîπÊ≠£„Åß„ÄÅÂ≠êËÇ≤„Å¶ÊîØÊè¥„Å®„Åó„Å¶Êã°ÂÖÖ„Åï„Çå„ÅüÂà∂Â∫¶„ÅØÔºü",
                options: ["‰ΩèÂÆÖ„É≠„Éº„É≥ÊéßÈô§„ÅÆ„Åø", "ÁîüÂëΩ‰øùÈô∫ÊñôÊéßÈô§„ÅÆ„Åø", "‰∏°Êñπ„Å®„ÇÇÊã°ÂÖÖ", "„Å©„Å°„Çâ„ÇÇÂ§âÊõ¥„Å™„Åó"],
                correct: 2,
                explanation: "2025Âπ¥Â∫¶„ÅØÂ≠êËÇ≤„Å¶ÊîØÊè¥„Å®„Åó„Å¶„ÄÅ‰ΩèÂÆÖ„É≠„Éº„É≥ÊéßÈô§„ÅÆÊã°ÂÖÖÂª∂Èï∑„Å®ÁîüÂëΩ‰øùÈô∫ÊñôÊéßÈô§„ÅÆÊã°ÂÖÖ„ÅåÂÆüÊñΩ„Åï„Çå„Åæ„Åó„Åü„ÄÇ"
            }
        ];

        // ÂàùÊúüÂåñ
        function initGame() {
            updateStatus();
            displayQuests();
            addMessage("üéÆ „Ç≤„Éº„É†„ÇíÈñãÂßã„Åó„Åæ„Åó„ÅüÔºÅÁ®éÈáë„ÅÆÁü•Ë≠ò„ÇíË∫´„Å´„Å§„Åë„Å¶ÁéãÂõΩ„ÇíÊïë„ÅÑ„Åæ„Åó„Çá„ÅÜÔºÅ", "system");
        }

        // „Çπ„ÉÜ„Éº„Çø„ÇπÊõ¥Êñ∞
        function updateStatus() {
            document.getElementById('playerLevel').textContent = gameState.playerLevel;
            document.getElementById('playerGold').textContent = gameState.playerGold;
            document.getElementById('playerExp').textContent = gameState.playerExp;
            document.getElementById('clearedQuests').textContent = gameState.clearedQuests;
        }

        // „ÇØ„Ç®„Çπ„ÉàË°®Á§∫
        function displayQuests() {
            const questList = document.getElementById('questList');
            questList.innerHTML = '';

            quests.forEach(quest => {
                const difficultyClass = `difficulty-${quest.difficulty}`;
                const questElement = document.createElement('div');
                questElement.className = 'quest-item';
                questElement.onclick = () => startQuest(quest.id);
                
                questElement.innerHTML = `
                    <div class="quest-difficulty ${difficultyClass}">${quest.difficulty.toUpperCase()}</div>
                    <div class="quest-name">${quest.name}</div>
                    <div class="quest-reward">üéÅ ${quest.reward}</div>
                    <div class="quest-desc">${quest.description}</div>
                `;
                
                questList.appendChild(questElement);
            });
        }

        // „ÇØ„Ç®„Çπ„ÉàÈñãÂßã
        function startQuest(questId) {
            const quest = quests.find(q => q.id === questId);
            if (!quest) return;

            gameState.currentBattle = quest;
            showBattle(quest);
            addMessage(`‚öîÔ∏è ${quest.name}„ÇíÈñãÂßã„Åó„Åæ„Åó„ÅüÔºÅ`, "info");
        }

        // „Éê„Éà„É´ÁîªÈù¢Ë°®Á§∫
        function showBattle(quest) {
            const battleScene = document.getElementById('battleScene');
            const enemySprite = document.getElementById('enemySprite');
            const enemyName = document.getElementById('enemyName');
            const battleQuestion = document.getElementById('battleQuestion');
            const battleOptions = document.getElementById('battleOptions');

            enemySprite.textContent = quest.enemy.split(' ')[0];
            enemyName.textContent = quest.enemy;
            battleQuestion.textContent = quest.question;

            battleOptions.innerHTML = '';
            quest.options.forEach((option, index) => {
                const button = document.createElement('button');
                button.className = 'btn btn-primary';
                button.textContent = `${index + 1}. ${option}`;
                button.onclick = () => selectAnswer(index);
                battleOptions.appendChild(button);
            });

            battleScene.style.display = 'flex';
        }

        // ÂõûÁ≠îÈÅ∏Êäû
        function selectAnswer(selectedIndex) {
            const quest = gameState.currentBattle;
            const isCorrect = selectedIndex === quest.correct;

            if (isCorrect) {
                // Ê≠£Ëß£„ÅÆÂ†¥Âêà
                const rewards = quest.reward.match(/(\d+)„Ç¥„Éº„É´„Éâ.*?(\d+)ÁµåÈ®ìÂÄ§/);
                const goldReward = parseInt(rewards[1]);
                const expReward = parseInt(rewards[2]);

                gameState.playerGold += goldReward;
                gameState.playerExp += expReward;
                gameState.clearedQuests++;

                // „É¨„Éô„É´„Ç¢„ÉÉ„ÉóÂà§ÂÆö
                if (gameState.playerExp >= gameState.playerLevel * 100) {
                    gameState.playerLevel++;
                    gameState.playerExp = 0;
                    addMessage(`üéâ „É¨„Éô„É´„Ç¢„ÉÉ„ÉóÔºÅ„É¨„Éô„É´${gameState.playerLevel}„Å´„Å™„Çä„Åæ„Åó„ÅüÔºÅ`, "success");
                }

                addMessage(`‚úÖ Ê≠£Ëß£ÔºÅ${quest.explanation}`, "success");
                addMessage(`üí∞ ${goldReward}„Ç¥„Éº„É´„Éâ„ÄÅ‚≠ê${expReward}ÁµåÈ®ìÂÄ§„ÇíÁç≤ÂæóÔºÅ`, "success");
                
                // ÁâπÂà•Â†±ÈÖ¨
                if (quest.difficulty === "legend") {
                    addMessage("üèÜ ‰ºùË™¨„ÅÆÁß∞Âè∑„ÄåÁ®éÂà∂ÊîπÊ≠£„Éû„Çπ„Çø„Éº„Äç„ÇíÁç≤ÂæóÔºÅ", "success");
                }
            } else {
                addMessage(`‚ùå ‰∏çÊ≠£Ëß£... Ê≠£Ëß£„ÅØ„Äå${quest.options[quest.correct]}„Äç„Åß„Åó„Åü„ÄÇ`, "error");
                addMessage(`üìñ ${quest.explanation}`, "info");
            }

            updateStatus();
            hideBattle();
        }

        // „Éê„Éà„É´ÁîªÈù¢ÈùûË°®Á§∫
        function hideBattle() {
            document.getElementById('battleScene').style.display = 'none';
            gameState.currentBattle = null;
        }

        // „ÇØ„Ç®„Çπ„ÉàÊõ¥Êñ∞
        function refreshQuests() {
            displayQuests();
            addMessage("üîÑ „ÇØ„Ç®„Çπ„Éà„É™„Çπ„Éà„ÇíÊõ¥Êñ∞„Åó„Åæ„Åó„ÅüÔºÅ", "system");
        }

        // „Ç∑„Éß„ÉÉ„ÉóË°®Á§∫
        function showShop() {
            const shopItems = [
                "üß™ Áü•Ë≠ò„Éù„Éº„Ç∑„Éß„É≥ (50„Ç¥„Éº„É´„Éâ)",
                "üìö ‰∏äÁ¥öÁ®éÊ≥ï„ÅÆÊõ∏ (200„Ç¥„Éº„É´„Éâ)",
                "üó°Ô∏è Ë®àÁÆó„ÅÆÂâ£ (300„Ç¥„Éº„É´„Éâ)",
                "üõ°Ô∏è ÁØÄÁ®é„ÅÆÁõæ (250„Ç¥„Éº„É´„Éâ)"
            ];
            
            let shopMessage = "üè™ „Ç¢„Ç§„ÉÜ„É†„Ç∑„Éß„ÉÉ„Éó\n\n";
            shopItems.forEach((item, index) => {
                shopMessage += `${index + 1}. ${item}\n`;
            });
            shopMessage += "\n‚ÄªÂÆüË£ÖÊ∫ñÂÇô‰∏≠„Åß„Åô";
            
            alert(shopMessage);
            addMessage("üè™ „Ç∑„Éß„ÉÉ„Éó„ÇíË®™„Çå„Åæ„Åó„ÅüÔºàÂÆüË£ÖÊ∫ñÂÇô‰∏≠Ôºâ", "info");
        }

        // „É°„ÉÉ„Çª„Éº„Ç∏ËøΩÂä†
        function addMessage(text, type = "system") {
            const messageLog = document.getElementById('messageLog');
            const message = document.createElement('div');
            message.className = `message message-${type}`;
            message.textContent = text;
            messageLog.appendChild(message);
            messageLog.scrollTop = messageLog.scrollHeight;
        }

        // ESC„Ç≠„Éº„Åß„Éê„Éà„É´ÁµÇ‰∫Ü
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape' && gameState.currentBattle) {
                hideBattle();
                addMessage("üö™ „Éê„Éà„É´„Åã„ÇâÈÄÉËµ∞„Åó„Åæ„Åó„Åü...", "error");
            }
        });

        // „Ç≤„Éº„É†ÂàùÊúüÂåñ
        document.addEventListener('DOMContentLoaded', initGame);
    </script>
</body>
</html>
